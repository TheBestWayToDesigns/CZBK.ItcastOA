@{
    ViewBag.Title = "Index";
}
@using CZBK.ItcastOA.Model
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>产品报价列表</title>

    <link href="~/Content/themes/icon.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.7.1.min.js"></script>

    <link href="~/Content/themes/default/easyui.css" rel="stylesheet" />
    <link href="~/Content/themes/icon.css" rel="stylesheet" />
    <script src="~/Scripts/jquery.easyui.min.js"></script>
    <script src="~/Scripts/easyui-lang-zh_CN.js"></script>
    <script src="~/Scripts/datapattern.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/MyAjaxForm.js"></script>
    <script src="~/Scripts/MyNewJS.js"></script>
    <script src="~/Scripts/jquery.jqprint-0.3.js"></script>
    <script type="text/javascript">
        $.fn.extend({

            resizeDataGrid: function (heightMargin, widthMargin, minHeight, minWidth) {

                var height = $("#dgdiv").height() - heightMargin;
                var width = $("#dgdiv").width() - widthMargin;
                height = height < minHeight ? minHeight : height;
                width = width < minWidth ? minWidth : width;
                $(this).datagrid('resize', {
                    height: height,
                    width: width
                });
            }
        });

        $(function () {
            // 当窗口大小发生变化时，调整DataGrid的大小
            $(window).resize(function () {
                $('#' + datagridId).resizeDataGrid(0, 0, 200, 500);
            });          
            //$("#dd").combobox({
            //    onChange: function (n, o) {
            //        var val = $('#Province').combobox('getValue');
            //        $('#City').combobox({
            //            url: '/YXBJ/GetAddress?parentiD=' + val + '&MyColums=City',
            //            valueField: 'ID',
            //            textField: 'MyTexts'
            //        });

            //    }
            //})
            $("#AddDIV").css("display", "none");
            loadData();
            $("#divBtn a").click(function () {                
                var ClickA = $(this).attr("id");
                if (ClickA == "EverDwork")
                {
                    loadData();
                }
                else if (ClickA == "EverD")
                {
                    loadSchedule();
                }
            })            
        });
     
        //文件上传
        function bindFileUpclick() {
            $(".filebox").click(function () {
                if ($(".filebox").val() == "") {
                    $.messager.alert("提示", "请选择上传文件", "errer");
                    return;
                }
                //开始进行异步上传文件
                $("#addschedulefrom").ajaxSubmit({
                    success: function (data) {
                        var serverData = data.split(":");
                        if (serverData[0] == "yes") {
                            $("#hiddenMenuIcon").val(serverData[1]);//将上传成功的文件地址放在隐藏input中
                        }
                        else {
                            $.messager.alert("提示", serverData[1], "errer");
                        }
                    },
                    url: "/EverDayWork/FileUpload",
                    type: "post"
                })
            });
        }
        function loadData(pars) {
            $('#tt').datagrid({
                url: '/EverDayWork/GetScheduleType',
                title: '',              
                height: $("#dgdiv").height() - 20,
                fitColumns: true, //列自适应
                nowrap: true,
                rownumbers: true,
                //onClickCell: onClickCell,
                //onAfterEdit: onAfterEdit,
                idField: 'ID',//主键列的列明
                loadMsg: '正在加载权限的信息...',
                pagination: true,//是否有分页
                singleSelect: true,//是否单行选择
                pageSize: 25,//页大小，一页多少条数据
                pageNumber: 1,//当前页，默认的
                pageList: [15, 25, 35],
                queryParams: pars,//往后台传递参数
                columns: [[
                    { field: 'ck', checkbox: true, title: '', width: 30 },
                    { field: 'ID', title: '编号' },
                    { field: 'ItemText', title: '日程状态种类' },
                    {
                        field: 'Del', title: '操作',
                        formatter: function (value, row, index) {
                            return "<a href='#' onclick='deldata()' >删除</a>";
                    } },
                ]],
                toolbar: [{
                    id: 'btnAddScheduleType',
                    text: '添加',
                    iconCls: 'icon-add',
                    handler: function () {
                        addScheduleType();
                    }
                }],
                onLoadSuccess: function () {
                }
            });
        }

        //加载日程页面
        function loadSchedule(pars) {
            $('#tt').datagrid({
                url: '/EverDayWork/GetSchedule',
                title: '',
                height: $("#dgdiv").height() - 20,
                fitColumns: true, //列自适应
                nowrap: true,
                rownumbers: true,
                //onClickCell: onClickCell,
                //onAfterEdit: onAfterEdit,
                idField: 'ID',//主键列的列明
                loadMsg: '正在加载权限的信息...',
                pagination: true,//是否有分页
                singleSelect: true,//是否单行选择
                pageSize: 25,//页大小，一页多少条数据
                pageNumber: 1,//当前页，默认的
                pageList: [15, 25, 35],
                queryParams: pars,//往后台传递参数
                columns: [[
                    { field: 'ck', checkbox: true, title: '', width: 30 },
                    { field: 'ID', title: '日程编号' },
                    { field: 'UserID', title: '用户编号' },
                    {
                        field: 'ScheduleTime', title: '日程时间', formatter: function (value, row, col) {
                            var sd = value == null ? '' : ChangeDateFormat(value);
                            return sd;
                        }
                    },
                    {
                        field: 'ScheduleAddTime', title: '日程创建时间', formatter: function (value, row, col) {
                            var sd = value == null ? '' : ChangeDateFormat(value);
                            return sd;
                        }
                    },
                    {
                        field: 'ScheduleUpdateTime', title: '日程最后修改时间', formatter: function (value, row, col) {
                            var sd = value == null ? '' : ChangeDateFormat(value);
                            return sd;
                        }
                    },
                    { field: 'ScheduleText', title: '日程内容' },
                    { field: 'ScheduleTypeID', title: '日程类型' },
                    { field: 'TextReadBak', title: '日程审核状态' },
                    { field: 'TextReadUser', title: '日程审核人' },
                    {
                        field: 'TextReadTime', title: '日程审核时间', formatter: function (value, row, col) {
                            var sd = value == null ? '' : ChangeDateFormat(value);
                            return sd;
                        }
                    },
                    { field: 'FileItemID', title: '文件编号' },
                ]],
                toolbar: [{
                    id: 'btnAddSchedule',
                    text: '添加',
                    iconCls: 'icon-add',
                    handler: function () {
                        addSchedule();
                    }
                }, {
                    id: 'btnUpdateSchedule',
                    text: '删除',
                    iconCls: 'icon-remove',
                    handler: function () {
                        delSchedule();
                    }
                }, {
                    id: 'btnUpdateSchedule',
                    text: '修改',
                    iconCls: 'icon-edit',
                    handler: function () {
                        //updateSchedule();
                        var rows = datagrid.datagrid("getSelections");
                        //如果只选择了一行则可以进行修改，否则不操作
                        if (rows.length == 1) {
                            //修改之前先关闭已经开启的编辑行，当调用endEdit该方法时会触发onAfterEdit事件
                            if (editRow != undefined) {
                                datagrid.datagrid("endEdit", editRow);
                            }
                            //当无编辑行时
                            if (editRow == undefined) {
                                //获取到当前选择行的下标
                                var index = datagrid.datagrid("getRowIndex", rows[0]);
                                //开启编辑
                                datagrid.datagrid("beginEdit", index);
                                //把当前开启编辑的行赋值给全局变量editRow
                                editRow = index;
                                //当开启了当前选择行的编辑状态之后，
                                //应该取消当前列表的所有选择行，要不然双击之后无法再选择其他行进行编辑
                                datagrid.datagrid("unselectAll");
                            }
                        }
                    }
                }, {
                    id: 'btnUpdateSchedule',
                    text: '保存',
                    iconCls: 'icon-save',
                    handler: function () {
                        //保存时结束当前编辑的行，自动触发onAfterEdit事件如果要与后台交互可将数据通过Ajax提交后台
                        datagrid.datagrid("endEdit", editRow);
                    }
                }, {
                    id: 'btnUpdateSchedule',
                    text: '取消编辑',
                    iconCls: 'icon-redo',
                    handler: function () {
                        //取消当前编辑行把当前编辑行罢undefined回滚改变的数据,取消选择的行
                        editRow = undefined;
                        datagrid.datagrid("rejectChanges");
                        datagrid.datagrid("unselectAll");
                    }
                }],
                onAfterEdit: function (rowIndex, rowData, changes) {
                    //endEdit该方法触发此事件
                    console.info(rowData);
                    editRow = undefined;
                },
                onDblClickRow: function (rowIndex, rowData) {
                    //双击开启编辑行
                    if (editRow != undefined) {
                        datagrid.datagrid("endEdit", editRow);
                    }
                    if (editRow == undefined) {
                        datagrid.datagrid("beginEdit", rowIndex);
                        editRow = rowIndex;
                    }
                },
                onLoadSuccess: function () {
                }
            });
        }



        //将序列化成json格式后日期(毫秒数)转成日期格式
        function ChangeDateFormat(cellval) {
            var date = new Date(parseInt(cellval.replace("/Date(", "").replace(")/", ""), 10));
            var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
            var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
            var hour = date.getHours();
            var minutes = date.getMinutes()<10?"0"+date.getMinutes():date.getMinutes();
            var seconds = date.getSeconds()<10?"0"+date.getSeconds():date.getSeconds();
            return date.getFullYear() + "-" + month + "-" + currentDate + " " + hour + ":" + minutes + ":" + seconds;
        }
        //修改日程类型完成以后调用该方法
        function afterScheduleTypeEdit(data) {
            if (data.ret == "ok") {
                try
                {
                    $('#tt').datagrid('reload');
                    $('#AddScheduleTypeDIV').dialog('close');
                }
                catch(e)
                {

                }   

            } else if (data.ret == "no") {
                $.messager.alert("提示",data.msg,"error");
            } else {
                $.messager.alert("提醒", "修改数据错误!!", "error");
            }
        }
        //修改日程完成以后调用的方法
        function afterScheduleEdit(data) {
            if (data.ret == "ok") {
                try {
                    $('#tt').datagrid('reload');
                    $('#AddScheduleDIV').dialog('close');
                }
                catch (e) {

                }

            } else if (data.ret == "no") {
                $.messager.alert("提示", data.msg, "error");
            } else {
                $.messager.alert("提醒", "修改数据错误!!", "error");
            }
        }
        //数字验证
        function num(obj) {
            obj.value = obj.value.replace(/[^\d.]/g, ""); //清除"数字"和"."以外的字符
            obj.value = obj.value.replace(/^\./g, ""); //验证第一个字符是数字
            obj.value = obj.value.replace(/\.{2,}/g, "."); //只保留第一个, 清除多余的
            obj.value = obj.value.replace(".", "$#$").replace(/\./g, "").replace("$#$", ".");
            obj.value = obj.value.replace(/^(\-)*(\d+)\.(\d\d).*$/, '$1$2.$3'); //只能输入两个小数
        }
        function addScheduleType() {
            $("#AddScheduleTypeDIV").css("display", "block");  
            $('#AddScheduleTypeDIV').dialog({
                title: "添加日程状态",
                width: 450,
                height: 400,
                collapsible: true,
                resizable: true,
                modal: true,
                buttons: [{
                    text: '确定',
                    iconCls: 'icon-ok',
                    handler: function () {
                        if ($("#ItemText").val().trim().length <= 0)
                        {
                            $.messager.alert("提示", "值不可以为空！");
                            return;
                        }
                        $("#addscheduletypefrom").submit();//提交表单
                    }
                }, {
                    text: '取消',
                    handler: function () {
                        $('#AddScheduleTypeDIV').dialog('close');
                    }
                }]
            });
        }
        //添加日程
        function addSchedule() {
            $("#AddScheduleDIV").css("display", "block");
            
            $('#AddScheduleDIV').dialog({
                title: "添加日程",
                width: 450,
                height: 400,
                collapsible: true,
                resizable: true,
                modal: true,
                buttons: [{
                    text: '确定',
                    iconCls: 'icon-ok',
                    handler: function () {
                       
                        $("#addschedulefrom").submit();//提交表单
                    }
                }, {
                    text: '取消',
                    handler: function () {
                        $('#AddScheduleDIV').dialog('close');
                    }
                },
                {
                    text: '增加一个文件框',
                    iconCls: 'icon-add',
                    handler: function () {
                        $('#AddScheduleTab').append('<tr><td>文件</td><td><input class="filebox" type="file" style="width:100%"/></td></tr>');
                    }
                }
                ]
            });
            
        }

        //修改日程
        function updateSchedule() {
            var rows = $('#tt').datagrid('getSelections');
            if (rows.length != 1) {
                //alert("请选择要修改的商品！");
                $.messager.alert("提醒", "请选择要编辑的1条记录!", "error");
                return;
            }
            $.post("/EverDayWork/UpdateSchedule", { "id": rows[0].ID }, function (data) {
                if (data.ret == "ok") {
                    $('#tt').datagrid("reload");
                }
                else {
                    $.messager.alert("提示", data.msg);
                }
            })
        }


        //删除数据
        function deldata() {
            var rows = $('#tt').datagrid('getSelections');
            if (rows.length != 1) {
                //alert("请选择要修改的商品！");
                $.messager.alert("提醒", "请选择要编辑的1条记录!", "error");
                return;
            }
            $.post("/EverDayWork/DelType", { "id": rows[0].ID }, function (data) {
                if (data.ret == "ok") {
                    $('#tt').datagrid("reload");
                }
                else {
                    $.messager.alert("提示", data.msg);
                }
            })
        }
    </script>

</head>
<body class="easyui-layout">
    <div id="divBtn" data-options="region:'west',split:true,title:'选项'"  class="easyui-panel btnlink" style="width:150px; padding:8px;">
        <a href="#" class="easyui-linkbutton" data-options="toggle:true,group:'g1'" id="EverD">日程</a>
        <a href="#" class="easyui-linkbutton" data-options="toggle:true,group:'g1'" id="">添加中</a>
        <a href="#" class="easyui-linkbutton" data-options="toggle:true,group:'g1'" id="">添加中</a>
        <a href="#" class="easyui-linkbutton" data-options="toggle:true,group:'g1'" id="">添加中</a>
        <a href="#" class="easyui-linkbutton" data-options="toggle:true,group:'g1'" id="">添加中</a>
        <a href="#" class="easyui-linkbutton" data-options="toggle:true,group:'g1'" id="EverDwork">日程状态</a>
    </div>
    <div data-options="region:'center',title:'数据报表'" id="dgdiv">
        <div id="TTdiv">
            <table id="tt" class="easyui-datagrid" style="width: 900px; " title="标题，可以使用代码进行初始化，也可以使用这种属性的方式" iconcls="icon-edit"  data-options="toolbar:'#tb'"
                    >
            </table>
        </div>
    </div>
   
    <!---------------添加日程类型信息--------------------->
    <div id="AddScheduleTypeDIV" style="height:100%; width:100%;">
        @using (Ajax.BeginForm("AddScheduleType", "EverDayWork", new { }, new AjaxOptions() { HttpMethod = "post", OnSuccess = "afterScheduleTypeEdit" }, new { id = "addscheduleTypefrom" }))
        {<table>               
                <tr><td>日程状态</td><td><input type="text"  name="ItemText" id="ItemText" /></td></tr>               
            </table>
            <table>
                <tbody id="Selebody"></tbody>
            </table>

            }
    </div>

    <!---------------添加日程----------------->
    <div id="AddScheduleDIV" style="height:100%; width:100%;">
        @using (Ajax.BeginForm("AddSchedule", "EverDayWork", new { }, new AjaxOptions() { HttpMethod = "post", OnSuccess = "afterScheduleEdit" }, new { id = "addschedulefrom" }))
        {<table id="AddScheduleTab">
             <tr><td>日程时间</td><td><input type="text" class="easyui-datetimebox" name="ScheduleTime" id="ScheduleTime" /></td></tr>
             <tr><td>日程内容</td><td><textarea class="easyui-textarea" name="ScheduleText" id="ScheduleText"  style="width:302px;height:158px"></textarea></td></tr>
             <tr>
                <td>日程类型</td>
                <td>
                    <!--从数据库取值的下拉菜单-->
                    <input class="easyui-combobox" id="ScheduleType"
                         name="ScheduleTypeID"
                         url="/EverDayWork/GetScheduleTypeall"
                         valueField="ID"
                         textField="ItemText"
                         panelHeight="auto" style="width:100px" />
                 </td>
             </tr>
             <tr>
                <td>文件</td>
                <td>
                    <input class="filebox" type="file" name="file-1" style="width:100%"/>
                    <input id="hiddenMenuIcon" name="FileItemID" type="text" style="display:none"/>
                </td>
             </tr>
        </table>
            <table>
                <tbody id="Selebody"></tbody>
            </table>

        }
    </div>



</body>
</html>



@*<div id="tb" style="padding:5px;height:auto">
    <div style="margin-bottom:5px">
        &nbsp;&nbsp; &nbsp;&nbsp;
        开始时间: <input class="easyui-datebox" id="StTime" value="2017-01-01" style="width:120px">
        To: <input class="easyui-datebox" id="DwTime" value="2017-12-30" style="width:120px">
        &nbsp;&nbsp; &nbsp;&nbsp;

        营销员:
        <select class="easyui-combobox" panelHeight="auto" id="Person" style="width:100px">
            @{foreach (UserInfo Item in ViewBag.user)
                {
                    <option value="@Item.ID">@Item.UName</option>
                }
            }
        </select> &nbsp;&nbsp; &nbsp;&nbsp;

        <span id="SpanYyZt">
            原因:
            <select class="easyui-combobox" id="YyZt" panelHeight="auto" style="width:100px">
                <option value="-99">失败</option>
                @{foreach (T_YSItems Item in ViewBag.items)
                    {
                        <option value="@Item.ID">@Item.MyText</option>
                    }
                }
            </select>
        </span>&nbsp;&nbsp; &nbsp;&nbsp;
    </div>
    <div style="">
        &nbsp;&nbsp; &nbsp;&nbsp;

        客户名称:
        <select class="easyui-combobox" panelHeight="auto" id="KHname" style="width:auto">
            @{foreach (YXB_Kh_list Item in ViewBag.KeHuName)
                {
                    <option value="@Item.id">@Item.KHname</option>
                }
            }
        </select> &nbsp;&nbsp; &nbsp;&nbsp;
        供货地点:&nbsp;&nbsp;省份
        <input class="easyui-combobox" id="Province"
               name="Province"
               url="/YXBJ/GetAddress?parentiD=0&MyColums=Province"
               valueField="ID"
               textField="MyTexts"
               panelHeight="auto" style="width:100px" />
        &nbsp;&nbsp;城市
        <input class="easyui-combobox"
               id="City"
               name="City"
               url=""
               valueField="ID"
               textField="MyTexts"
               panelHeight="auto" style="width:100px" />
        &nbsp;&nbsp;区/县
        <input class="easyui-combobox"
               id="Village"
               name="Village"
               url=""
               valueField="ID"
               textField="MyTexts"
               panelHeight="auto" style="width:100px" />
    </div>
    <div>
        <span id="CanPinSelect">
            &nbsp;&nbsp; &nbsp;&nbsp;
            产品名称:

            <input class="easyui-combobox"
                   id="CPname"
                   name="CPname"
                   url="/MasterBaoJia/GetCPname?Action=1"
                   valueField="ID"
                   textField="MyText"
                   panelHeight="auto" style="width:auto" />

            &nbsp;&nbsp; &nbsp;&nbsp;
            产品型号:
            <input class="easyui-combobox"
                   id="CPxh"
                   name="CPxh"
                   url="/MasterBaoJia/GetCPname?Action=2"
                   valueField="ID"
                   textField="MyText"
                   panelHeight="auto" style="width:100px" />

        </span>
        &nbsp;&nbsp; &nbsp;&nbsp;
        <a href="#" class="easyui-linkbutton" id="qingkou" iconCls="icon-reload">清空</a>
        <a href="#" class="easyui-linkbutton" id="Sousuo" iconCls="icon-search">搜索1</a>

        <a href="#" class="easyui-linkbutton" id="Sousuo_win" iconCls="icon-search">搜索2</a>

    </div>

</div>*@